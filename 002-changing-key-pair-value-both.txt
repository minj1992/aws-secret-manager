Ah! Got it — you want a generalized solution that can handle multiple keys in a secret JSON and update only the values, not the keys themselves. For example, if your secret looks like this:

{
  "password": "oldpass",
  "apiKey": "oldapikey",
  "token": "oldtoken"
}


You want to rotate/update the values without changing the keys.

Here’s a clean approach:

import random
import string
import re
import boto3
import json

def generate_strong_value():
    """Generate a random strong string (16 chars, mix of letters, digits, special)."""
    upper = string.ascii_uppercase
    lower = string.ascii_lowercase
    digits = string.digits
    special = "@#$%^&*_-+="
    all_chars = upper + lower + digits + special

    while True:
        value = ''.join(random.choice(all_chars) for _ in range(16))
        categories = sum([
            any(c in upper for c in value),
            any(c in lower for c in value),
            any(c in digits for c in value),
            any(c in special for c in value)
        ])
        if categories < 3:
            continue
        if re.search(r'(.)\1\1', value):
            continue
        return value

def lambda_handler(event, context):
    client = boto3.client('secretsmanager')
    secret_id = event['SecretId']
    token = event['ClientRequestToken']

    # Get current secret value
    current_secret = client.get_secret_value(SecretId=secret_id)
    secret_dict = json.loads(current_secret['SecretString'])

    # Update all key values with new generated secrets
    for key in secret_dict:
        secret_dict[key] = generate_strong_value()

    # Store updated secret in AWSPENDING
    client.put_secret_value(
        SecretId=secret_id,
        ClientRequestToken=token,
        SecretString=json.dumps(secret_dict)
    )

    return {
        "status": "success",
        "message": f"Updated values for {len(secret_dict)} keys successfully."
    }

✅ Key Points:

Works for any number of keys in the secret JSON.

Only updates the values, keys remain unchanged.

Uses strong random strings for all values.

Compatible with AWS Secrets Manager rotation (stores in AWSPENDING first).
